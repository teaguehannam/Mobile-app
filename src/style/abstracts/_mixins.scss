

@mixin on-event($self: false) {
	@if $self {
		&, &:hover,	&:active, &:focus {
			@content;
		}
	} @else {
		&:hover,
		&:active,
		&:focus {
			@content;
		}
	}
}


@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}


@mixin respond-to($breakpoint) {
$raw-query: map-get($breakpoints, $breakpoint);


@if $raw-query {
	$query: if(
		type-of($raw-query) == 'string',
		unquote($raw-query),
		inspect($raw-query)
	);

	@media #{$query} {
		@content;
	}
	} @else {
		@error 'No value found for `#{$breakpoint}`. '
		 + 'Please make sure it is defined in `$breakpoints` map.';
	}
}


@mixin containerLight() {
	text-align: center;
	max-width: 600px;
	width: 90%;
	overflow: auto;
	padding: 8px;
	border-radius: 9px;
	background-color: rgba(252,252,252,1);
	color: black;
	box-shadow: 0px 0px 6px 2px rgba(192,192,192,0.5);

} // containerLight

@mixin containerDark() {
	text-align: center;
	max-width: 600px;
	width: 90%;
	margin: 32px auto;
	overflow: auto;
	padding: 8px;
	border-radius: 9px;
	background-color: rgba(19,19,19,0.8);
	box-shadow: 0px 0px 6px 2px rgba(192,192,192,0.25);

} // containerDark

@mixin containerSpaceGrey() {
	text-align: center;
	max-width: 600px;
	width: 90%;
	margin: 32px auto;
	overflow: auto;
	padding: 8px;
	border-radius: 9px;
	background: $space-grey;
	box-shadow: 0px 0px 6px 2px rgba(192,192,212,0.25);

} // containerDark
